import React, { Component, Fragment } from "react";

import {
  EuiFlexGroup,
  EuiFlexItem,
  EuiButtonEmpty,
  EuiTitle,
  EuiText,
  EuiTextAlign,
  EuiSpacer,
  EuiFieldText
} from "@elastic/eui";

import { WzConfigurationSettingsHeaderViewer } from '../util-components/configuration-settings-header';
import WzConfigurationSettingsGroup from '../util-components/configuration-settings-group';
import WzViewSelector from '../util-components/view-selector';
import { WzSettingsViewer } from '../util-components/code-viewer';
import WzConfigurationSettingsTabSelector from '../util-components/configuration-settings-tab-selector';

const helpLinks = [
  { text: 'Global reference', href: 'https://documentation.wazuh.com/current/user-manual/reference/ossec-conf/global.html' },
  { text: 'Logging reference', href: 'https://documentation.wazuh.com/current/user-manual/reference/ossec-conf/logging.html' }
];

const mainSettings = [
  { key: 'alerts_log', text: 'Write alerts to alerts.log file'},
  { key: 'jsonout_output', text: 'Write JSON formatted alerts to alerts.json file' },
  { key: 'logall', text: 'Archive all the alerts in plain text format' },
  { key: 'logall_json', text: 'Archive all the alerts in JSON format' },
  { key: 'plain', text: 'Write internal logs in plain text' },
  { key: 'json', text: 'Write internal logs in JSON format' },
  { key: 'max_output_size', text: 'Size limit of alert files' },
  { key: 'rotate_interval', text: 'File rotation interval' }
];

const emailSettings = [
  { key: 'email_notification', text: 'Enable alerts sent by email'}
];

const otherSettings = [
  { key: 'stats', text: 'Severity level for alerts generated by statistical analysis'},
  { key: 'host_information', text: 'Severity level for alerts generated by host change monitor'},
  { key: 'memory_size', text: 'Memory size for the alert correlation engine'},
  { key: 'white_list', text: 'White-listed IP addresses'}
];

const preludeZeroMQOutputSettings = [
  { key: 'prelude_output', text: 'Enable Prelude output'},
  { key: 'zeromq_output', text: 'Enable ZeroMQ output'}
];

class WzConfigurationGlobalConfigurationGlobal extends Component{
  constructor(props){
    super(props);
  }
  render(){
    const { currentConfig } = this.props;
    const mainSettingsConfig = {
      ...currentConfig['analysis-global'].global,
      plain: currentConfig['com-logging'].logging.plain,
      json: currentConfig['com-logging'].logging.json,
    };
    const globalSettingsConfig = {
      ...currentConfig['analysis-global'].global
    };
    // TODO: Missing field for rendering? Juanca?
    return (
      <WzConfigurationSettingsTabSelector title='Main settings' description='Basic alerts and logging settings' currentConfig={currentConfig} helpLinks={helpLinks}>
        <WzConfigurationSettingsGroup
          config={mainSettingsConfig}
          items={mainSettings}
        />
        <WzConfigurationSettingsGroup
          title='Email settings'
          description='Basic email settings (needed for granular email settings)'
          config={globalSettingsConfig}
          items={emailSettings}/>
        <WzConfigurationSettingsGroup
          title='Other settings'
          description='Settings not directly related to any specific component'
          config={globalSettingsConfig}
          items={otherSettings}/>
        <WzConfigurationSettingsGroup
          title='Prelude and ZeroMQ output'
          config={globalSettingsConfig}
          items={preludeZeroMQOutputSettings}/>
      </WzConfigurationSettingsTabSelector>
    )
  }
}

export default WzConfigurationGlobalConfigurationGlobal;